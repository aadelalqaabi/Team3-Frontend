{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport { TouchableWithoutFeedbackBase } from \"react-native-web/dist/index\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport React, { useState, useEffect } from \"react\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport authStore from \"../stores/authStore\";\nimport { observer } from \"mobx-react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction EditScreen() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      image = _useState2[0],\n      setImage = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      user = _useState4[0],\n      setUser = _useState4[1];\n\n  var navigation = useNavigation();\n\n  var cancelButton = function cancelButton() {\n    navigation.navigate(\"Profile\");\n  };\n\n  useEffect(function () {\n    (function _callee() {\n      var _await$ImagePicker$re, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(Platform.OS !== \"web\")) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(ImagePicker.requestMediaLibraryPermissionsAsync());\n\n            case 3:\n              _await$ImagePicker$re = _context.sent;\n              status = _await$ImagePicker$re.status;\n\n              if (status !== \"granted\") {\n                alert(\"Sorry, we need camera roll permissions to make this work!\");\n              }\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  var pickImage = function _callee2() {\n    var result, filename, match, img_type;\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              aspect: [16, 9],\n              quality: 1\n            }));\n\n          case 2:\n            result = _context2.sent;\n\n            if (!result.cancelled) {\n              filename = result.uri.split(\"/\").pop();\n              match = /\\.(\\w+)$/.exec(filename);\n              img_type = match ? \"image/\" + match[1] : \"image\";\n              setUser(_objectSpread(_objectSpread({}, user), {}, {\n                image: {\n                  uri: Platform.OS === \"android\" ? result.uri : result.uri.replace(\"file://\", \"\"),\n                  name: filename,\n                  type: img_type\n                }\n              }));\n              setImage(result.uri);\n            }\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var handleChangeBio = function handleChangeBio(text) {\n    setUser(_objectSpread(_objectSpread({}, user), {}, {\n      bio: text\n    }));\n  };\n\n  var handleSubmit = function _callee3(event) {\n    return _regeneratorRuntime.async(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(authStore.updateUser(user));\n\n          case 2:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsxs(SafeAreaView, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.cancel,\n      children: _jsx(Button, {\n        onPress: cancelButton,\n        title: \"Cancel\",\n        color: \"#841584\"\n      })\n    }), _jsxs(View, {\n      style: styles.main,\n      children: [_jsxs(View, {\n        style: styles.addImage,\n        children: [_jsx(Text, {\n          style: styles.title,\n          children: \"Choose an image\"\n        }), _jsxs(View, {\n          children: [image === null && _jsx(Button, {\n            title: \"Pick an image from camera roll\",\n            onPress: pickImage\n          }), image && _jsxs(View, {\n            children: [_jsx(Image, {\n              source: {\n                uri: image\n              },\n              style: {\n                alignSelf: \"center\",\n                width: 384,\n                height: 216,\n                borderRadius: 20,\n                margin: 10\n              }\n            }), _jsx(Button, {\n              title: \"Choose another image \",\n              onPress: pickImage\n            })]\n          })]\n        })]\n      }), _jsx(View, {\n        style: styles.input,\n        children: _jsx(TextInput, {\n          onChangeText: handleChangeBio,\n          placeholder: \"add your bio...\"\n        })\n      }), _jsx(View, {\n        style: styles.addImage,\n        children: _jsx(Button, {\n          onPress: handleSubmit,\n          title: \"Submit\",\n          color: \"#841584\"\n        })\n      })]\n    })]\n  });\n}\n\nexport default observer(EditScreen);\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    margin: 12\n  },\n  cancel: {\n    justifyContent: \"flex-end\",\n    alignItems: \"flex-end\"\n  },\n  main: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  addImage: {\n    backgroundColor: \"pink\",\n    borderRadius: 10,\n    padding: 10\n  },\n  addImageText: {\n    fontSize: 30\n  },\n  input: {\n    height: 40,\n    width: 250,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10\n  }\n});","map":{"version":3,"names":["TouchableWithoutFeedbackBase","useNavigation","React","useState","useEffect","ImagePicker","authStore","observer","EditScreen","image","setImage","user","setUser","navigation","cancelButton","navigate","Platform","OS","requestMediaLibraryPermissionsAsync","status","alert","pickImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","result","cancelled","filename","uri","split","pop","match","exec","img_type","replace","name","type","handleChangeBio","text","bio","handleSubmit","event","updateUser","styles","container","cancel","main","addImage","title","alignSelf","width","height","borderRadius","margin","input","StyleSheet","create","flex","justifyContent","alignItems","backgroundColor","padding","addImageText","fontSize","borderWidth"],"sources":["/Users/adool998/Development/react-native/team3/Team3-Frontend/Team3/screens/EditScreen.js"],"sourcesContent":["import {\n  Text,\n  View,\n  SafeAreaView,\n  Button,\n  StyleSheet,\n  Image,\n  TextInput,\n  KeyboardAvoidingView,\n  TouchableWithoutFeedbackBase,\n  Keyboard,\n  Platform,\n} from \"react-native\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport React, { useState, useEffect } from \"react\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport authStore from \"../stores/authStore\";\nimport { observer } from \"mobx-react\";\n\nfunction EditScreen() {\n  const [image, setImage] = useState(null);\n  const [user, setUser] = useState();\n  const navigation = useNavigation();\n  const cancelButton = () => {\n    navigation.navigate(\"Profile\");\n  };\n\n  useEffect(() => {\n    (async () => {\n      if (Platform.OS !== \"web\") {\n        const { status } =\n          await ImagePicker.requestMediaLibraryPermissionsAsync();\n        if (status !== \"granted\") {\n          alert(\"Sorry, we need camera roll permissions to make this work!\");\n        }\n      }\n    })();\n  }, []);\n\n  const pickImage = async () => {\n    let result = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.All,\n      allowsEditing: true,\n      aspect: [16, 9],\n      quality: 1,\n    });\n\n    if (!result.cancelled) {\n      let filename = result.uri.split(\"/\").pop();\n      let match = /\\.(\\w+)$/.exec(filename);\n      let img_type = match ? `image/${match[1]}` : `image`;\n      setUser({\n        ...user,\n        image: {\n          uri:\n            Platform.OS === \"android\"\n              ? result.uri\n              : result.uri.replace(\"file://\", \"\"),\n          name: filename,\n          type: img_type,\n        },\n      });\n      setImage(result.uri);\n    }\n  };\n\n  const handleChangeBio = (text) => {\n    setUser({\n      ...user,\n      bio: text,\n    });\n  };\n\n  const handleSubmit = async (event) => {\n    await authStore.updateUser(user);\n  };\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <View style={styles.cancel}>\n        <Button onPress={cancelButton} title=\"Cancel\" color=\"#841584\" />\n      </View>\n      <View style={styles.main}>\n        <View style={styles.addImage}>\n          <Text style={styles.title}>Choose an image</Text>\n          <View>\n            {image === null && (\n              <Button\n                title=\"Pick an image from camera roll\"\n                onPress={pickImage}\n              />\n            )}\n\n            {image && (\n              <View>\n                <Image\n                  source={{ uri: image }}\n                  style={{\n                    alignSelf: \"center\",\n                    width: 384,\n                    height: 216,\n                    borderRadius: 20,\n                    margin: 10,\n                  }}\n                />\n                <Button title=\"Choose another image \" onPress={pickImage} />\n              </View>\n            )}\n          </View>\n        </View>\n        <View style={styles.input}>\n          <TextInput\n            onChangeText={handleChangeBio}\n            placeholder=\"add your bio...\"\n          />\n        </View>\n        <View style={styles.addImage}>\n          <Button onPress={handleSubmit} title=\"Submit\" color=\"#841584\" />\n        </View>\n      </View>\n    </SafeAreaView>\n  );\n}\nexport default observer(EditScreen);\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    margin: 12,\n  },\n  cancel: {\n    justifyContent: \"flex-end\",\n    alignItems: \"flex-end\",\n  },\n  main: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  addImage: {\n    backgroundColor: \"pink\",\n    borderRadius: 10,\n    padding: 10,\n  },\n  addImageText: {\n    fontSize: 30,\n  },\n  input: {\n    height: 40,\n    width: 250,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}